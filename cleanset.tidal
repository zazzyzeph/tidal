

flood " <<I'M MOON POX>> "



-- sacresanct
do
  let notes = "0'maj9'<4 5 6> 2'maj9'o'<4 7> 4'maj9'<3 5 4 9> -2'maj9'<4 6 5>"
  d1
    -- $ degradeBy 0.9
    -- $ every 1 ((# delay 0.9) . (# delayt "0.25 0.125 0.0625"))
    -- $ within (0.25, 0.75) (degradeBy 0.2)
    $ whenmod 4 3 ((iter "[1 4]/4") . (# room 0.6) . (|* gain 0.85))
    $ stack [
      always (# nudge (slow 4 $ range 1 2 $ sine))
      $ arp "up"
      $ note (scale "lydian" notes |+ "<12!3 -12>")
      # s "perc:0"
      # legato 1
      -- # phaserdepth (slow 2 $ range 0.3 0.8 $ sine)
      -- # phaserrate ((slow 4 $ range 20 "<200 800 400>" $ sine) |+ (slow 5 $ range 20 100 $ sine))
      # gain 0.8
      ,
      whenmod 8 7 (# hpf 500) $ sb 0.5 (echoWith "<2!3 4>" 0.0625 (|* gain "<[[0.87|0][0.97|0]]!3 0.94>")) $ sb 0.2 (|* speed "[0 -1]*4") $ s "bd:6(3,8,2)" # amp 0.8 # orbit 1
      ,
      sb 0.2 (rip 0.9 0.0625) $ stack [
        fuc $ whenmod 8 2 (rip' 0.9 (1/64) (|* lpf "2000")) $ press $ s "ch:3(<4 3>,<8 12 4>,2)" # amp 0.4,
        fuc $ s "[~ sn:8]/2" # delay 0.5 # delayt 0.125 # delayfb 0.5
      ],
      whenmod 3 8 (|* (press $ gain "0.1(3,8,2") ) $ s "mpad0" # n (select "0.75 0.25" ["<4!2 5!2 4!2 5!2 4!2 5!2 ~ ~ 2 3>", "<0 1 2 3>/2"]) # cutoff (slow 2 $ sine * 3000 + 400) # amp 0.2 # legato 1
    ] 

resetCycles

hush

-- jongleman's jerny
d1 
  $ stack [
    degradeBy 0.2 $ sb 0.2 (jux rev)
      $ fast "<[[2|4] 3!2 [2|4]] [3!3 [2|4]]>"
      $ sb 0.2 (slow "1 1 1 4")
      $ arp "up"
      $ note ((scale "minor" "<c4'min7'<8 6>!6 [g4'min7'<3 4> bf4'min7'6]>") |+ "2")  
      # filtenvatk (slow 4 $ sine * 0.2)
      # filtenvdcy (slow 8 $ sine * 0.5)
      # gain 0.6
      # room 0.3
      # size 0.98
      # s "mpanalog",
    sb 0.2 (rip 0.9 0.125) $ stack [
      "<[bd:8!<4 3> ~@<3 4>] [bd:8!<4 3> ~@<3 4>]/4>" # speed 0.9 # orbit 1,
      sb 0.2 (|* speed 1.1) $ s "[~ ch]!4 ~!3",
      sb 0.3 (|* speed "1 -1") $ s "~!4 [sn:6@3|sn:1*2!3]"
    ],
    note ((scale "minor" "<[c5!6|c4!6] g4 bf4>") |+ 2 + "0@3 12@4") # s "harmon"
  ] 
  -- # hpf 2800 # room 0.9


-- elegy

do
  let pat = (ascii "<{k h a n y o u n i s}%7>/4")
  let switch = "t@3 f@4"
  let patsize = 7
  d1
    $ degrade
    $ whenmod 8 4 ((# hpf 1200) . (# room 0.9))
    -- $ sometimesBy 0.3 (jux rev) 
    $ stack [
        struct pat
        $ degradeBy 0.08
        $ s "harmon"
        # note ("{<c5 ef5 d4 g4>}%8/32" |- "<24>")
        # decay 0.2
        # spacing "0.3"
        # gain 0.8
        ,
        degradeBy 0.5 $ almostNever (|* speed "-1.1") $ every 8 (fuc) $ slow "2 <3 -1>" $ every 4 (# n "14 15") $ struct pat $ s "bd:7" # amp 1 # gain 0.9 # orbit 1,
        whenmod 6 8 (rip 0.9 "0.0625") $ stack [
        stack [
          struct (inv pat) $ slow 4 $ whenmod 4 8 (# n 3) $ s "~@4 sn*3?" # gain 0.89 # room 0.4 # legato 1,
          rarely (|* speed "-1.1 0.5 1@5") $ every 16 (fuc) $ whenmod 8 6 (# n "[4|1|2]*4") $ every 4 ((# s "oh:3")) $ struct (inv pat) $ s "ch" # legato 1 # pan "[0|1]*8" # speed 1
        ] # room 0.5
      ]
      ,
      rolledBy (choose [(1.5/patsize),(2/patsize),(0.25/patsize)])
        $ n "[{<c4'min9'<o d2>'<i ii>'7 ef4'min9'd3'7 d3'min9'<d2 d3 o>'<i ii>'7 g3'min9'd2'7>}%7]/32"
        # "harmon"
        # spacing "[0.3|0.4|0.2|0.5]*7"
        # detune "[22|5|11|19]" # room 0.8 # gain 0.67
    ]
    
-- lack thereof
    
do
  let pat = "1(<3 5>,17,<0 3 5>)" 
  d1
    $ whenmod 6 8 (# hpf 3000)
    $ (# nudge (range 0 2 $ slow 4 $ sine))
    $ stack [
      struct pat
        $ arp "<[up|updown|converge]>"
        $ s "perc:0"
        # note (scale "minor" "c5'min11 a5'min11")
        # amp 1.1
        # legato 1,
      stack [
        struct (inv pat)
        $ whenmod 15 16 (slow 2)
        $ whenmod 3 4 (# n "3 5")
        $ ghost' (1/16) $ s "sn(<3 5>,<8 7 4>,2)" # cut 1,
        struct (pat)
          $ s "bd:10/2"
          # amp 0.4
          # orbit 1,
        struct (pat) $ note "0" # cut 4 # s "mpsyn0"
      ]
    ]
    # room 0.1

-- congress
do
  let pat = (ascii "<0(<3 5 7>,<8 12>,2)>/[4 5 6 7 8]")
  let patsize = 8
  let fuc p = degradeBy 1 $ p
  d1
    $ sb 0.2 (jux rev)
    $ stack [
        note ("<[g4'dom7'o c4'dom7'o b4'dom7'o e4'dom7'o] [a4'dom7'o d4'dom7'o c4'dom7'o [c4'dom7'o b3'dom7'o]]>/8" |+ 2)
        # s "mpanalog"
        # filtcut 5000
        # filtenvatk 0.6
        # filtenvdcy 0.4
        # gain 0.8
        ,
      stack [
        every 4 (# n "14 15") $ struct pat $ slow 4 $ s "bd:7" # amp 0.9 # orbit 1 # legato 1,
        whenmod 6 8 (rip 0.9 (choose [(1/5), (1/4), 1/7]))
        $ stack [
          slow 2 $ struct (inv pat) $ (|* speed 0.9) $ every 4 (# n 3) $ s "sn" # n 1 # room 0.4 # orbit 0,
          sometimesBy 0.2 (echoWith "<1 2 4 3 1>" (0.5/patsize) (|* speed 0.9)) $ every 4 ((# s "oh:3")) $ struct (inv pat) $ echo 4 (0.125) 0.95 $ s "ch" # cut 2
        ]
      ],
      press $ struct pat $ n "<d3 g3 g3 d3>" # "harmon" # gain 1.1 # legato 1.5
    ]
    # speed 1
    # room 0.3


  
setcps (110/60/4)


hush

